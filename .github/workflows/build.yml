# Builds and runs tests in all three supported OSes
# Pushes CI feed if secrets.SLEET_CONNECTION is provided

name: build
on: 
  workflow_dispatch:
  push:
    branches: [ main, dev, 'dev/*', 'feature/*', 'rel/*' ]
    paths-ignore:
      - changelog.md
      - code-of-conduct.md
      - security.md
      - support.md
      - readme.md
  pull_request:
    types: [opened, synchronize, reopened]

env:
  DOTNET_NOLOGO: true
  Configuration: Release
  PackageOutputPath: ${{ github.workspace }}/bin
  GeneratePackageOnBuild: true

defaults:
  run:
    shell: bash

jobs:
  build:
    name: build-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ "ubuntu-latest", "macOS-latest", "windows-latest" ]
    steps:
      - name: 🤘 checkout
        uses: actions/checkout@v4
        with: 
          submodules: recursive
          fetch-depth: 0

      - name: 🙏 build
        run: dotnet build
        working-directory: ILRepackTool

      - name: ⚙ install
        run: dotnet tool install -g dotnet-ilrepack --add-source ${{ github.workspace }}/bin

      - name: 🧪 test
        run: ilrepack /help || echo "Done"
        continue-on-error: true

      - name: 🐛 logs
        uses: actions/upload-artifact@v3
        if: runner.debug && always()
        with:
          name: logs
          path: '*.binlog'

      # Only push CI package to sleet feed if building on ubuntu (fastest)
      - name: 🚀 sleet
        env:
          SLEET_CONNECTION: ${{ secrets.SLEET_CONNECTION }}
        if: env.SLEET_CONNECTION != ''
        run: |
          dotnet tool install -g --version 4.0.18 sleet 
          sleet push bin --config none -f --verbose -p "SLEET_FEED_CONTAINER=nuget" -p "SLEET_FEED_CONNECTIONSTRING=${{ secrets.SLEET_CONNECTION }}" -p "SLEET_FEED_TYPE=azure" || echo "No packages found"
